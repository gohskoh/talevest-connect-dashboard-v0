name: Rewrite Lovable commits

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  rewrite-lovable-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout full repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Check for lovable commits in history
        id: check
        run: |
          if git log --pretty=format:'%an|%cn' --all | grep -E -q 'lovable-dev(\[bot\])?|lovable.dev|lovable-dev'; then
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo "found=false" >> $GITHUB_OUTPUT
          fi

      - name: Exit if no lovable commits found
        if: steps.check.outputs.found == 'false'
        run: |
          echo "No lovable commits found in repository history. Nothing to do."
          exit 0

      - name: Configure replacement author (from repo secrets)
        run: |
          git config user.name "${{ secrets.AUTHOR_NAME }}"
          git config user.email "${{ secrets.AUTHOR_EMAIL }}"
          echo "AUTHOR_NAME=${{ secrets.AUTHOR_NAME }}" >> $GITHUB_ENV
          echo "AUTHOR_EMAIL=${{ secrets.AUTHOR_EMAIL }}" >> $GITHUB_ENV

      - name: Rewrite commits authored/committed by lovable app names
        run: |
          AUTHOR_NAME="${{ secrets.AUTHOR_NAME }}"
          AUTHOR_EMAIL="${{ secrets.AUTHOR_EMAIL }}"

          git filter-branch --env-filter '
            if [ "$GIT_AUTHOR_NAME" = "lovable-dev[bot]" ] || \
               [ "$GIT_AUTHOR_NAME" = "lovable.dev" ] || \
               [ "$GIT_AUTHOR_NAME" = "lovable-dev" ] || \
               [ "$GIT_COMMITTER_NAME" = "lovable-dev[bot]" ] || \
               [ "$GIT_COMMITTER_NAME" = "lovable.dev" ] || \
               [ "$GIT_COMMITTER_NAME" = "lovable-dev" ]; then
              export GIT_AUTHOR_NAME="$AUTHOR_NAME"
              export GIT_AUTHOR_EMAIL="$AUTHOR_EMAIL"
              export GIT_COMMITTER_NAME="$AUTHOR_NAME"
              export GIT_COMMITTER_EMAIL="$AUTHOR_EMAIL"
            fi
          ' -- --all

      - name: Force push rewritten history (branches + tags)
        run: |
          git push origin --force --all
          git push origin --force --tags
